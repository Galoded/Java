<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper    
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"    
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.supreme.mybatis.mapper.UserMapper">
	<!--mapper.xml 1. 配置的mapper命名空间和mapper接口全限定名相同 ； 2. 配置的mapper的statement的id和mapper接口方法相同； 
		3. 配置的mapper的 parameterType和mapper接口方法的入参类型相同； 4. 配置的mapper的resultType和mapper接口方法的返回值类型相同 -->

	<!-- parameterType的类型1.简单的java类型，int、String等；2.hashmap类型；3.pojo类型；4.pojo包装类型 -->

	<!-- 精确查询 #{}：占位符 -->
	<select id="findUserById" parameterType="int"
		resultType="cn.supreme.mybatis.po.User">
		SELECT * FROM USER WHERE id =#{id}
	</select>
	<!-- ${}拼接符 -->
	<!-- parameterType简单数据类型 -->
	<select id="findUserByName" parameterType="java.lang.String"
		resultType="cn.supreme.mybatis.po.User">
		SELECT * FROM USER WHERE username LIKE '%${value}%'
	</select>

	<!-- 插入语句 -->
	<!-- 获取插入sql产生的自增id值，SELECT LAST_INSERT_ID()是mysql自己的sql语句 -->
	<!-- parameterType的pojo类型 -->
	<insert id="insertUser" parameterType="cn.supreme.mybatis.po.User">
		<selectKey keyProperty="id" resultType="int" order="AFTER">
			SELECT
			LAST_INSERT_ID()
		</selectKey>
		INSERT INTO USER(username,
		birthday, sex, address) VALUES
		(#{username},#{birthday},#{sex},#{address})
	</insert>

	<!-- parameterType的包装的pojo类型，user为UserVO的属性 -->
	<!-- <insert id="insertUser" parameterType="cn.supreme.mybatis.po.UserVO"> 
		<selectKey keyProperty="id" resultType="int" order="AFTER"> SELECT LAST_INSERT_ID() 
		</selectKey> INSERT INTO USER(username, birthday, sex, address) VALUES (#{user.username},#{user.birthday},#{user.sex},#{user.address}) 
		</insert> -->

	<!-- parameterType的hashmap类型,map的key即为参数名称，value为传入的值 -->
	<!-- <insert id="insertUser" parameterType="hashmap"> <selectKey keyProperty="id" 
		resultType="int" order="AFTER"> SELECT LAST_INSERT_ID() </selectKey> INSERT 
		INTO USER(username, birthday, sex, address) VALUES (#{username},#{birthday},#{sex},#{address}) 
		</insert> -->

	<!-- 1. parameterType的包装的pojo类型，idList为UserVO的属性 -->
	<!--传入的值为集合，通过foreach标签获取传参 -->
	<!--open、close、separator都是连接符的标签 -->
	<!-- <select id="findUserByIdList" parameterType="cn.supreme.mybatis.po.UserVO"
		resultType="cn.supreme.mybatis.po.User">
		SELECT * FROM USER WHERE id IN
		<foreach collection="idList" item="id" open="(" close=")"
			separator=",">
			#{id}
		</foreach>
	</select> -->
	<!--2. 或者直接使用java.util.List,但是collection的值必须为list  -->
	<select id="findUserByIdList" parameterType="java.util.List"
		resultType="cn.supreme.mybatis.po.User">
		SELECT * FROM USER WHERE id IN
		<foreach collection="list" item="id" open="(" close=")"
			separator=",">
			#{id}
		</foreach>
	</select>

</mapper>